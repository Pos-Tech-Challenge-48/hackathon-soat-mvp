name: ðŸš€ Build and Deploy
run-name: ðŸŒ´ ${{ github.ref_name }} | ${{ github.event.inputs.environment }} | Deploying...

on:
  push:
    branches:
      - main

env:
  VERSION: 1.0.0

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Tag and Push
        id: tag
        run: |
          BRANCH=${{ github.ref_name }}
          TAG="v${{ env.VERSION }}-${{ github.run_number }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git tag $TAG
          git push origin $TAG

  build:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t hackaton-fiap:${{ needs.tag.outputs.tag }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag hackaton-fiap:${{ needs.tag.outputs.tag }} ${{ secrets.DOCKER_USERNAME }}/hackaton-fiap:${{ needs.tag.outputs.tag }}
          docker push ${{ secrets.DOCKER_USERNAME }}/hackaton-fiap:${{ needs.tag.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: [tag, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
 
      - name: Deploy to EC2
        env:
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_USER: ${{ secrets.EC2_USER }}
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
            mkdir -p ~/.ssh
            echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

            ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'

            ls -la
            echo $EOF
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

            docker stop hackaton-fiap || true
            docker rm hackaton-fiap || true

            docker pull ${{ secrets.DOCKER_USERNAME }}/hackaton-fiap:${{ needs.tag.outputs.tag }}
            docker run -d --platform linux/amd64 --name hackaton-fiap -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/hackaton-fiap:${{ needs.tag.outputs.tag }}
            EOF
